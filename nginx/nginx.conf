events {
    worker_connections 1024;
}

http {
	include mime.types;
    
	server {
        listen 80;
        server_name localhost;

        # Redirect all HTTP requests to HTTPS
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name localhost;

        ssl_certificate /etc/nginx/certs/nginx.crt;
        ssl_certificate_key /etc/nginx/certs/nginx.key;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers HIGH:!aNULL:!MD5;

        location /kibana/ {
            proxy_pass https://kibana:5601/kibana/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /spring/ {
            proxy_pass http://springbootelk:8080/;
			proxy_set_header Host $host;
			proxy_pass_request_headers on;
			client_max_body_size 20M; 
			proxy_buffer_size 128k;
			proxy_buffers   4 256k;
			proxy_busy_buffers_size 256k;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Prefix '/spring';
            proxy_set_header X-Forwarded-Proto $scheme;
        }

    }
}
